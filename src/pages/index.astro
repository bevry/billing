---
import TailwindLayoutComponent from '../layouts/Tailwind.astro'
import { getRuntime } from '@astrojs/cloudflare/runtime'
import { getEntity } from '../data/database'
// import type { APIRoute } from 'astro'
getRuntime(Astro.request)

let sentEmail = ''
if (Astro.request.method === 'POST') {
	const body = await Astro.request.formData()
	const { email } = Object.fromEntries(body)
	const entity = email && getEntity(email as string)
	if (entity) {
		const magicLink = 'http://localhost:3000/login/' + entity.id
		const request = new Request('https://api.mailchannels.net/tx/v1/send', {
			method: 'POST',
			headers: {
				'content-type': 'application/json',
			},
			body: JSON.stringify({
				personalizations: [
					{
						to: [
							{
								email: entity.contact.email,
								name: entity.contact.name || entity.name,
							},
						],
					},
				],
				from: {
					email: 'us@bevry.me',
					name: 'Bevry Billing',
				},
				subject: 'Magic link for Bevry Billing',
				content: [
					{
						type: 'text/plain',
						value:
							'Sign in to Bevry Billing by opening this link:\n' + magicLink,
					},
				],
			}),
		})
		sentEmail = email as string
	}
}

/*
// export const post: APIRoute = async ({ request }) => {
// 	const body = await request.formData()
// 	const { email } = Object.fromEntries(body)

// 	// Access environment variables per request inside a function
// 	// const serverUrl = import.meta.env.SERVER_URL
// 	// const result = await fetch(serverUrl + '/user/' + params.id)
// 	return {
// 		body: email, // await result.text(),
// 	}
// 	return {
// 		body: JSON.stringify({
// 			message: 'This was a POST!',
// 		}),
// 	}
// }
*/
---

<TailwindLayoutComponent
	title="Sign in to Bevry Billing"
	class="bg-gray-50 flex h-screen"
>
	<div class="m-auto">
		<div>
			<!--<img class="mx-auto h-48 w-auto" src="/banner.svg" alt="Bevry" />-->
			<h2 class="text-center text-3xl font-bold tracking-tight text-gray-900">
				{sentEmail ? 'Check your inbox' : 'Sign in to your account'}
			</h2>
			{
				sentEmail ? (
					<p class="mt-2 text-sm font-medium	 text-green-600 dark:text-green-500 animate-pulse">
						A magic email with a login link has been{' '}
						<span class="font-medium">sent</span> to{' '}
						<span class="font-mono">{sentEmail}</span>
					</p>
				) : (
					<p class="mt-2 text-center text-sm text-gray-600">
						A magic email with a login link will be sent to the email.
					</p>
				)
			}
		</div>
		<form class="mt-8 space-y-6" action="" method="POST">
			<input type="hidden" name="remember" value="true" />
			<div class="-space-y-px rounded-md shadow-sm">
				<div>
					<label for="email-address" class="sr-only">Email address</label>
					<input
						id="email-address"
						name="email"
						type="email"
						autocomplete="email"
						value={sentEmail}
						required
						class="relative block w-full appearance-none rounded-none rounded-t-md border border-gray-300 px-3 py-2 text-gray-900 placeholder-gray-500 focus:z-10 focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 sm:text-sm"
						placeholder="Email address"
					/>
				</div>
			</div>

			<div>
				<button
					type="submit"
					class="group relative flex w-full justify-center rounded-md border border-transparent bg-indigo-600 py-2 px-4 text-sm font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"
				>
					<span class="absolute inset-y-0 left-0 flex items-center pl-3"
						><svg
							xmlns="http://www.w3.org/2000/svg"
							fill="none"
							viewBox="0 0 24 24"
							stroke-width="1.5"
							stroke="currentColor"
							class="w-6 h-6"
						>
							<path
								stroke-linecap="round"
								stroke-linejoin="round"
								d="M6 12L3.269 3.126A59.768 59.768 0 0121.485 12 59.77 59.77 0 013.27 20.876L5.999 12zm0 0h7.5"
							></path>
						</svg>
					</span>
					Send {sentEmail ? 'another' : ''} magic email
				</button>
			</div>
		</form>
	</div>
</TailwindLayoutComponent>
